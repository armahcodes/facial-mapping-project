# -*- coding: utf-8 -*-
"""Facial Mapping Project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UuQOMki6RNLi9-TIEN6FjHwqFh3eFdzb

# Facial Mapping for Clustering Human Features - Unsupervised Learning 





By Joshua Armah
"""

# Commented out IPython magic to ensure Python compatibility.
# Dependencies for Model
import seaborn; 
from sklearn.linear_model import LinearRegression
from scipy import stats
import pylab as pl
pl.rcParams['figure.figsize'] = (10, 7)
seaborn.set()
import numpy as np
from sklearn import datasets
from sklearn.cluster import MiniBatchKMeans
from sklearn.feature_extraction.image import extract_patches_2d
import matplotlib.pyplot as plt
# %matplotlib inline

"""## Dataset"""

# Dataset for random faces
faces = datasets.fetch_olivetti_faces()

#Explain the Faces Dataset
print(faces.DESCR)

# Create Clusters with Data

X, y = faces.data, faces.target
from sklearn.decomposition import PCA
pca = PCA(n_components=2)
pca.fit(X)
X_reduced = pca.transform(X)
print("Reduced dataset shape:", X_reduced.shape)

import pylab as pl
pl.scatter(X_reduced[:, 0], X_reduced[:, 1], c=y,
           cmap='RdYlBu')

#Fix RNG in KMeans
from sklearn.cluster import KMeans
k_means = KMeans(n_clusters=40, random_state=0) 
k_means.fit(X)
y_pred = k_means.predict(X)

pl.scatter(X_reduced[:, 0], X_reduced[:, 1], c=y_pred,
           cmap='RdYlBu');

#visualize as blob
from sklearn.datasets.samples_generator import make_blobs
X, y = make_blobs(n_samples=400, centers=40,
                  random_state=0, cluster_std=0.60)
plt.scatter(X[:, 0], X[:, 1], s=50);

# Visualize Face Clusters
from sklearn.cluster import KMeans
est = KMeans(40) 
est.fit(X)
y_kmeans = est.predict(X)
plt.scatter(X[:, 0], X[:, 1], c=y_kmeans, s=400, cmap='rainbow');

